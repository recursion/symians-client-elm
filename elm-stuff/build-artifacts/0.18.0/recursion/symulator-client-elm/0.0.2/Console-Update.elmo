var _recursion$symulator_client_elm$Console_Update_ops = _recursion$symulator_client_elm$Console_Update_ops || {};
_recursion$symulator_client_elm$Console_Update_ops['=>'] = F2(
	function (v0, v1) {
		return {ctor: '_Tuple2', _0: v0, _1: v1};
	});
var _recursion$symulator_client_elm$Console_Update$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'ToggleVisible':
				return A2(
					_recursion$symulator_client_elm$Console_Update_ops['=>'],
					{
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{visible: !model.visible}),
						_1: _elm_lang$core$Platform_Cmd$none
					},
					_recursion$symulator_client_elm$App_Model$NoAction);
			case 'SubmitInput':
				return _recursion$symulator_client_elm$Console_Input$process(model);
			case 'SetInput':
				return A2(
					_recursion$symulator_client_elm$Console_Update_ops['=>'],
					{
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{input: _p0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					},
					_recursion$symulator_client_elm$App_Model$NoAction);
			case 'ToggleInputFocus':
				return A2(
					_recursion$symulator_client_elm$Console_Update_ops['=>'],
					{
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{hasFocus: !model.hasFocus}),
						_1: _elm_lang$core$Platform_Cmd$none
					},
					_recursion$symulator_client_elm$App_Model$NoAction);
			default:
				return A2(
					_recursion$symulator_client_elm$Console_Update_ops['=>'],
					A2(
						_recursion$symulator_client_elm$Console_Update_ops['=>'],
						_elm_lang$core$Native_Utils.update(
							model,
							{scroll: !model.scroll}),
						_elm_lang$core$Platform_Cmd$none),
					_recursion$symulator_client_elm$App_Model$NoAction);
		}
	});
