var _mdgriffith$style_elements$Element_Keyed$namedGrid = F3(
	function (style, attrs, config) {
		var forSpacing = function (attr) {
			var _p0 = attr;
			if (_p0.ctor === 'Spacing') {
				return true;
			} else {
				return false;
			}
		};
		var _p1 = A2(_elm_lang$core$List$partition, forSpacing, attrs);
		var spacing = _p1._0;
		var notSpacingAttrs = _p1._1;
		var gridAttributes = function () {
			var _p2 = _elm_lang$core$List$head(
				_elm_lang$core$List$reverse(spacing));
			if (_p2.ctor === 'Nothing') {
				return {ctor: '[]'};
			} else {
				if (_p2._0.ctor === 'Spacing') {
					return {
						ctor: '::',
						_0: A2(_mdgriffith$style_elements$Style_Internal_Model$GridGap, _p2._0._0, _p2._0._1),
						_1: {ctor: '[]'}
					};
				} else {
					return {ctor: '[]'};
				}
			}
		}();
		var prepare = function (el) {
			return _mdgriffith$style_elements$Element_Internal_Model$Keyed(
				A2(
					_elm_lang$core$List$map,
					function (_p3) {
						var _p4 = _p3;
						return _p4._0;
					},
					el));
		};
		return _mdgriffith$style_elements$Element_Internal_Model$Layout(
			{
				node: 'div',
				style: _elm_lang$core$Maybe$Just(style),
				layout: A2(
					_mdgriffith$style_elements$Style_Internal_Model$Grid,
					_mdgriffith$style_elements$Style_Internal_Model$NamedGridTemplate(
						{rows: config.rows, columns: config.columns}),
					gridAttributes),
				attrs: notSpacingAttrs,
				children: prepare(config.cells),
				absolutelyPositioned: _elm_lang$core$Maybe$Nothing
			});
	});
var _mdgriffith$style_elements$Element_Keyed$grid = F3(
	function (style, attrs, config) {
		var forSpacing = function (attr) {
			var _p5 = attr;
			if (_p5.ctor === 'Spacing') {
				return true;
			} else {
				return false;
			}
		};
		var _p6 = A2(_elm_lang$core$List$partition, forSpacing, attrs);
		var spacing = _p6._0;
		var notSpacingAttrs = _p6._1;
		var gridAttributes = function () {
			var _p7 = _elm_lang$core$List$head(
				_elm_lang$core$List$reverse(spacing));
			if (_p7.ctor === 'Nothing') {
				return {ctor: '[]'};
			} else {
				if (_p7._0.ctor === 'Spacing') {
					return {
						ctor: '::',
						_0: A2(_mdgriffith$style_elements$Style_Internal_Model$GridGap, _p7._0._0, _p7._0._1),
						_1: {ctor: '[]'}
					};
				} else {
					return {ctor: '[]'};
				}
			}
		}();
		var prepare = function (el) {
			return _mdgriffith$style_elements$Element_Internal_Model$Keyed(
				A2(
					_elm_lang$core$List$map,
					function (_p8) {
						var _p9 = _p8;
						return _p9._0;
					},
					el));
		};
		return _mdgriffith$style_elements$Element_Internal_Model$Layout(
			{
				node: 'div',
				style: _elm_lang$core$Maybe$Just(style),
				layout: A2(
					_mdgriffith$style_elements$Style_Internal_Model$Grid,
					_mdgriffith$style_elements$Style_Internal_Model$GridTemplate(
						{rows: config.rows, columns: config.columns}),
					gridAttributes),
				attrs: notSpacingAttrs,
				children: prepare(config.cells),
				absolutelyPositioned: _elm_lang$core$Maybe$Nothing
			});
	});
var _mdgriffith$style_elements$Element_Keyed$named = F2(
	function (name, el) {
		return _mdgriffith$style_elements$Element_Internal_Model$NamedOnGrid(
			{
				ctor: '_Tuple2',
				_0: name,
				_1: A2(
					_mdgriffith$style_elements$Element_Internal_Modify$addAttr,
					_mdgriffith$style_elements$Element_Internal_Model$GridArea(name),
					el)
			});
	});
var _mdgriffith$style_elements$Element_Keyed$cell = function (box) {
	var pos = {start: box.start, width: box.width, height: box.height};
	return _mdgriffith$style_elements$Element_Internal_Model$OnGrid(
		{
			ctor: '_Tuple2',
			_0: box.key,
			_1: A2(
				_mdgriffith$style_elements$Element_Internal_Modify$addAttr,
				_mdgriffith$style_elements$Element_Internal_Model$GridCoords(
					_mdgriffith$style_elements$Style_Internal_Model$GridPosition(pos)),
				box.content)
		});
};
var _mdgriffith$style_elements$Element_Keyed$wrappedColumn = F3(
	function (style, attrs, children) {
		return _mdgriffith$style_elements$Element_Internal_Model$Layout(
			{
				node: 'div',
				style: _elm_lang$core$Maybe$Just(style),
				layout: A2(
					_mdgriffith$style_elements$Style_Internal_Model$FlexLayout,
					_mdgriffith$style_elements$Style_Internal_Model$Down,
					{
						ctor: '::',
						_0: _mdgriffith$style_elements$Style_Internal_Model$Wrap(true),
						_1: {ctor: '[]'}
					}),
				attrs: attrs,
				children: _mdgriffith$style_elements$Element_Internal_Model$Keyed(children),
				absolutelyPositioned: _elm_lang$core$Maybe$Nothing
			});
	});
var _mdgriffith$style_elements$Element_Keyed$wrappedRow = F3(
	function (style, attrs, children) {
		return _mdgriffith$style_elements$Element_Internal_Model$Layout(
			{
				node: 'div',
				style: _elm_lang$core$Maybe$Just(style),
				layout: A2(
					_mdgriffith$style_elements$Style_Internal_Model$FlexLayout,
					_mdgriffith$style_elements$Style_Internal_Model$GoRight,
					{
						ctor: '::',
						_0: _mdgriffith$style_elements$Style_Internal_Model$Wrap(true),
						_1: {ctor: '[]'}
					}),
				attrs: attrs,
				children: _mdgriffith$style_elements$Element_Internal_Model$Keyed(children),
				absolutelyPositioned: _elm_lang$core$Maybe$Nothing
			});
	});
var _mdgriffith$style_elements$Element_Keyed$column = F3(
	function (style, attrs, children) {
		return _mdgriffith$style_elements$Element_Internal_Model$Layout(
			{
				node: 'div',
				style: _elm_lang$core$Maybe$Just(style),
				layout: A2(
					_mdgriffith$style_elements$Style_Internal_Model$FlexLayout,
					_mdgriffith$style_elements$Style_Internal_Model$Down,
					{ctor: '[]'}),
				attrs: attrs,
				children: _mdgriffith$style_elements$Element_Internal_Model$Keyed(children),
				absolutelyPositioned: _elm_lang$core$Maybe$Nothing
			});
	});
var _mdgriffith$style_elements$Element_Keyed$row = F3(
	function (style, attrs, children) {
		return _mdgriffith$style_elements$Element_Internal_Model$Layout(
			{
				node: 'div',
				style: _elm_lang$core$Maybe$Just(style),
				layout: A2(
					_mdgriffith$style_elements$Style_Internal_Model$FlexLayout,
					_mdgriffith$style_elements$Style_Internal_Model$GoRight,
					{ctor: '[]'}),
				attrs: attrs,
				children: _mdgriffith$style_elements$Element_Internal_Model$Keyed(children),
				absolutelyPositioned: _elm_lang$core$Maybe$Nothing
			});
	});
var _mdgriffith$style_elements$Element_Keyed$GridPosition = F5(
	function (a, b, c, d, e) {
		return {start: a, width: b, height: c, key: d, content: e};
	});
var _mdgriffith$style_elements$Element_Keyed$Grid = F3(
	function (a, b, c) {
		return {rows: a, columns: b, cells: c};
	});
var _mdgriffith$style_elements$Element_Keyed$NamedGrid = F3(
	function (a, b, c) {
		return {rows: a, columns: b, cells: c};
	});
