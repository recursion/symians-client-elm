var _moarwick$elm_webpack_starter$App_Socket$subscribe = F4(
	function (event, channel, handler, model) {
		var nextSocket = A4(_fbonetti$elm_phoenix_socket$Phoenix_Socket$on, event, channel, handler, model.socket);
		return _elm_lang$core$Native_Utils.update(
			model,
			{socket: nextSocket});
	});
var _moarwick$elm_webpack_starter$App_Socket$send = F4(
	function (event, channel, encoder, model) {
		var token = A2(_elm_lang$core$Maybe$withDefault, '', model.auth.token);
		var payload = encoder(token);
		var push_ = A2(
			_fbonetti$elm_phoenix_socket$Phoenix_Push$withPayload,
			payload,
			A2(_fbonetti$elm_phoenix_socket$Phoenix_Push$init, event, channel));
		var _p0 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$push, push_, model.socket);
		var phxSocket = _p0._0;
		var phxCmd = _p0._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{socket: phxSocket}),
			_1: A2(_elm_lang$core$Platform_Cmd$map, _moarwick$elm_webpack_starter$App_Model$PhoenixMsg, phxCmd)
		};
	});
var _moarwick$elm_webpack_starter$App_Socket$leave = F2(
	function (channelName, model) {
		var _p1 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$leave, channelName, model.socket);
		var phxSocket = _p1._0;
		var phxCmd = _p1._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{socket: phxSocket}),
			_1: A2(_elm_lang$core$Platform_Cmd$map, _moarwick$elm_webpack_starter$App_Model$PhoenixMsg, phxCmd)
		};
	});
var _moarwick$elm_webpack_starter$App_Socket$joinWithHandlers = F4(
	function (channelName, onJoin, onClose, model) {
		var channel = A2(
			_fbonetti$elm_phoenix_socket$Phoenix_Channel$onClose,
			onClose,
			A2(
				_fbonetti$elm_phoenix_socket$Phoenix_Channel$onJoin,
				onJoin,
				_fbonetti$elm_phoenix_socket$Phoenix_Channel$init(channelName)));
		var _p2 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$join, channel, model.socket);
		var phxSocket = _p2._0;
		var phxCmd = _p2._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{socket: phxSocket}),
			_1: A2(_elm_lang$core$Platform_Cmd$map, _moarwick$elm_webpack_starter$App_Model$PhoenixMsg, phxCmd)
		};
	});
var _moarwick$elm_webpack_starter$App_Socket$join = F2(
	function (channelName, model) {
		var channel = _fbonetti$elm_phoenix_socket$Phoenix_Channel$init(channelName);
		var _p3 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$join, channel, model.socket);
		var phxSocket = _p3._0;
		var phxCmd = _p3._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{socket: phxSocket}),
			_1: A2(_elm_lang$core$Platform_Cmd$map, _moarwick$elm_webpack_starter$App_Model$PhoenixMsg, phxCmd)
		};
	});
var _moarwick$elm_webpack_starter$App_Socket$processPhoenixMsg = F2(
	function (msg, model) {
		var _p4 = A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$update, msg, model.socket);
		var phxSocket = _p4._0;
		var phxCmd = _p4._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{socket: phxSocket}),
			_1: A2(_elm_lang$core$Platform_Cmd$map, _moarwick$elm_webpack_starter$App_Model$PhoenixMsg, phxCmd)
		};
	});
var _moarwick$elm_webpack_starter$App_Socket$listen = function (model) {
	return A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$listen, model.socket, _moarwick$elm_webpack_starter$App_Model$PhoenixMsg);
};
var _moarwick$elm_webpack_starter$App_Socket$socketServer = 'ws:/192.168.88.29:4000/socket/websocket';
var _moarwick$elm_webpack_starter$App_Socket$initPhxSocket = _fbonetti$elm_phoenix_socket$Phoenix_Socket$init(_moarwick$elm_webpack_starter$App_Socket$socketServer);
