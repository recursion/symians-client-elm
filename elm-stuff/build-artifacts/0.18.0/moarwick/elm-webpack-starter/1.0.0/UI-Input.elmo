var _moarwick$elm_webpack_starter$UI_Input$NoOp = {ctor: 'NoOp'};
var _moarwick$elm_webpack_starter$UI_Input$MoveCameraZLevelDown = {ctor: 'MoveCameraZLevelDown'};
var _moarwick$elm_webpack_starter$UI_Input$MoveCameraZLevelUp = {ctor: 'MoveCameraZLevelUp'};
var _moarwick$elm_webpack_starter$UI_Input$MoveCameraRight = {ctor: 'MoveCameraRight'};
var _moarwick$elm_webpack_starter$UI_Input$MoveCameraLeft = {ctor: 'MoveCameraLeft'};
var _moarwick$elm_webpack_starter$UI_Input$MoveCameraDown = {ctor: 'MoveCameraDown'};
var _moarwick$elm_webpack_starter$UI_Input$MoveCameraUp = {ctor: 'MoveCameraUp'};
var _moarwick$elm_webpack_starter$UI_Input$matchKey = F2(
	function (code, inputIgnored) {
		if (!inputIgnored) {
			var _p0 = code;
			switch (_p0) {
				case 82:
					return _moarwick$elm_webpack_starter$UI_Input$MoveCameraZLevelUp;
				case 70:
					return _moarwick$elm_webpack_starter$UI_Input$MoveCameraZLevelDown;
				case 87:
					return _moarwick$elm_webpack_starter$UI_Input$MoveCameraUp;
				case 83:
					return _moarwick$elm_webpack_starter$UI_Input$MoveCameraDown;
				case 65:
					return _moarwick$elm_webpack_starter$UI_Input$MoveCameraLeft;
				case 68:
					return _moarwick$elm_webpack_starter$UI_Input$MoveCameraRight;
				default:
					return _moarwick$elm_webpack_starter$UI_Input$NoOp;
			}
		} else {
			return _moarwick$elm_webpack_starter$UI_Input$NoOp;
		}
	});
var _moarwick$elm_webpack_starter$UI_Input$keypress = F2(
	function (code, model) {
		var _p1 = A2(_moarwick$elm_webpack_starter$UI_Input$matchKey, code, model.consoleHasFocus);
		switch (_p1.ctor) {
			case 'NoOp':
				return model;
			case 'MoveCameraUp':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						camera: _moarwick$elm_webpack_starter$UI_Camera$moveUp(model.camera)
					});
			case 'MoveCameraDown':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						camera: _moarwick$elm_webpack_starter$UI_Camera$moveDown(model.camera)
					});
			case 'MoveCameraLeft':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						camera: _moarwick$elm_webpack_starter$UI_Camera$moveLeft(model.camera)
					});
			case 'MoveCameraRight':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						camera: _moarwick$elm_webpack_starter$UI_Camera$moveRight(model.camera)
					});
			case 'MoveCameraZLevelUp':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						camera: _moarwick$elm_webpack_starter$UI_Camera$moveZLevelUp(model.camera)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						camera: _moarwick$elm_webpack_starter$UI_Camera$moveZLevelDown(model.camera)
					});
		}
	});
